name: Build and deploy Docker app to Azure

on: push

env:
  AZURE_WEBAPP_NAME: caserver   # set this to your application's name
  AZURE_REGISTRY_NAME: azRegistryContainer
  CONTAINER_REGISTRY: azRegistryContainer.azurecr.io   # set secret with Container Registry name
  AZURE_RESOURCE_GROUP: container_rg # set this to your Azure Resource group's name - Needed only if you are provisioning the app in the workflow
  AZURE_APP_PLAN: myServicePlan # set this to your App service plan's name - Needed only if you are provisioning the app in the workflow
  
jobs:
  build-and-deploy-to-dev:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }}
    - name: ACR authentication
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.CONTAINER_REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}    
    - name: Docker Build & Push to ACR
      run: |
        docker build -t ${{ env.CONTAINER_REGISTRY }}/${{env.AZURE_WEBAPP_NAME}}:${{ github.sha }} --build-arg root_password = "Root:pass" .
        docker push ${{ env.CONTAINER_REGISTRY }}/${{env.AZURE_WEBAPP_NAME}}:${{ github.sha }}  
    - name: 'Deploy to Azure Web App for Container'   
      uses: azure/CLI@v0-beta      
      with:
        azcliversion: latest
        inlineScript: |
          az webapp create --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --plan ${{ env.AZURE_APP_PLAN }} --name ${{ env.AZURE_WEBAPP_NAME }} --deployment-container-image-name ${{ env.CONTAINER_REGISTRY }}/${{env.AZURE_WEBAPP_NAME}}:${{ github.sha }} --docker-registry-server-user ${{ env.AZURE_REGISTRY_NAME }} --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }}
